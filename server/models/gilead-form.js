'use strict';
var async = require('async');

module.exports = function(Gileadform) {
  Gileadform.printToPdf = function(id, cb) {

    async.waterfall([
        function GetFormFromDB(getFormCB){
              var filter = {
                id: id
              }

              // Get the form from the database
              Gileadform.findById(id, function(err, formModel) {

                if(err)
                  getFormCB(err);
                else
                  getFormCB(null, formModel);
              });

          },
        function TransformFormValues(model, transformCB){
          // Use the values from the model to create an object with field/value pairs
          // that can be used to populate the pdfFormFill
          console.log(model);
          var services = model.services;


          var result = [ { name: 'Benefits Investigation',
            page: 1,
            value: false,
            id: 131072,
            type: 'checkbox' },
            { name: 'Prior Authorization and Appeals Information',
              page: 1,
              value: false,
              id: 131073,
              type: 'checkbox' },
            { name: 'PAP Eligibility Screening',
              page: 1,
              value: false,
              id: 131074,
              type: 'checkbox' },
            { name: 'Co-pay Coupon Program Enrollment',
              page: 1,
              value: false,
              id: 131075,
              type: 'checkbox' },
            { name: 'Independent Co-pay Foundation Information',
              page: 1,
              value: false,
              id: 131076,
              type: 'checkbox' },
            { name: 'Product Name',
              page: 1,
              value: '',
              id: 131077,
              type: 'text' },
            { name: 'mg', page: 1, value: '', id: 131078, type: 'text' },
            { name: 'Treatment',
              page: 1,
              value: false,
              id: 131079,
              type: 'checkbox' },
            { name: 'PrEP',
              page: 1,
              value: false,
              id: 131080,
              type: 'checkbox' },
            { name: 'Patient Name',
              page: 1,
              value: '',
              id: 131081,
              type: 'text' },
            { name: 'Preferred Language',
              page: 1,
              value: '',
              id: 131082,
              type: 'text' },
            { name: 'Patient Address',
              page: 1,
              value: '',
              id: 131083,
              type: 'text' },
            { name: 'Patient City',
              page: 1,
              value: '',
              id: 131084,
              type: 'text' },
            { name: 'Patient State',
              page: 1,
              value: '',
              id: 131085,
              type: 'text' },
            { name: 'Zip Code', page: 1, value: '', id: 131086, type: 'text' },
            { name: 'Patient Phone',
              page: 1,
              value: '',
              id: 131087,
              type: 'text' },
            { name: 'Last 4 SSN',
              page: 1,
              value: '',
              id: 131088,
              type: 'text' },
            { name: 'EMail18_es_:signer:email',
              page: 1,
              value: '',
              id: 131089,
              type: 'text' },
            { name: 'Patient DOB',
              page: 1,
              value: '',
              id: 131090,
              type: 'text' },
            { name: 'Group86',
              page: 1,
              value: undefined,
              id: 131091,
              type: 'radio' },
            { name: 'Group86',
              page: 1,
              value: undefined,
              id: 131092,
              type: 'radio' },
            { name: 'Alternate Contact Name',
              page: 1,
              value: '',
              id: 131093,
              type: 'text' },
            { name: 'Alt Contact Phone #',
              page: 1,
              value: '',
              id: 131094,
              type: 'text' },
            { name: 'Relationship',
              page: 1,
              value: '',
              id: 131095,
              type: 'text' },
            { name: 'Group87',
              page: 1,
              value: undefined,
              id: 131096,
              type: 'radio' },
            { name: 'Group94',
              page: 1,
              value: undefined,
              id: 131097,
              type: 'radio' },
            { name: 'Primary Insurance',
              page: 1,
              value: '',
              id: 131098,
              type: 'text' },
            { name: 'Group93',
              page: 1,
              value: undefined,
              id: 131099,
              type: 'radio' },
            { name: 'Group93',
              page: 1,
              value: undefined,
              id: 131100,
              type: 'radio' },
            { name: 'Plan name', page: 1, value: '', id: 131101, type: 'text' },
            { name: 'Payer Phone Number',
              page: 1,
              value: '',
              id: 131102,
              type: 'text' },
            { name: 'Subscriber name',
              page: 1,
              value: '',
              id: 131103,
              type: 'text' },
            { name: 'Policy Holder Name',
              page: 1,
              value: '',
              id: 131104,
              type: 'text' },
            { name: 'Policy Holder Relationship',
              page: 1,
              value: '',
              id: 131105,
              type: 'text' },
            { name: 'Policy #', page: 1, value: '', id: 131106, type: 'text' },
            { name: 'Group #', page: 1, value: '', id: 131107, type: 'text' },
            { name: 'Rx Bin #', page: 1, value: '', id: 131108, type: 'text' },
            { name: 'Rx PCN#', page: 1, value: '', id: 131109, type: 'text' },
            { name: 'secondary insurance',
              page: 1,
              value: false,
              id: 131110,
              type: 'checkbox' },
            { name: 'Prescriber Name',
              page: 1,
              value: '',
              id: 131111,
              type: 'text' },
            { name: 'Facility Name',
              page: 1,
              value: '',
              id: 131112,
              type: 'text' },
            { name: 'Prescriber Address',
              page: 1,
              value: '',
              id: 131113,
              type: 'text' },
            { name: 'Prescriber City',
              page: 1,
              value: '',
              id: 131114,
              type: 'text' },
            { name: 'Prescriber State',
              page: 1,
              value: '',
              id: 131115,
              type: 'text' },
            { name: 'Prescriber Zip Code',
              page: 1,
              value: '',
              id: 131116,
              type: 'text' },
            { name: 'Office Contact',
              page: 1,
              value: '',
              id: 131117,
              type: 'text' },
            { name: 'Prescriber Phone #',
              page: 1,
              value: '',
              id: 131118,
              type: 'text' },
            { name: 'Prescriber Fax #',
              page: 1,
              value: '',
              id: 131119,
              type: 'text' },
            { name: 'Prescriber NPI#',
              page: 1,
              value: '',
              id: 131120,
              type: 'text' },
            { name: 'Prescriber Tax ID #',
              page: 1,
              value: '',
              id: 131121,
              type: 'text' },
            { name: 'Prescriber State License  #',
              page: 1,
              value: '',
              id: 131122,
              type: 'text' },
            { name: 'Diagnosis', page: 1, value: '', id: 131123, type: 'text' },
            { name: 'Group87',
              page: 1,
              value: undefined,
              id: 131124,
              type: 'radio' },
            { name: 'Group94',
              page: 1,
              value: undefined,
              id: 131125,
              type: 'radio' },
            { name: 'Patient Name',
              page: 2,
              value: '',
              id: 196608,
              type: 'text' },
            { name: 'Patient DOB',
              page: 2,
              value: '',
              id: 196609,
              type: 'text' },
            { name: 'Check Box59',
              page: 2,
              value: false,
              id: 196610,
              type: 'checkbox' },
            { name: 'Patient Rep\'s Name',
              page: 2,
              value: '',
              id: 196611,
              type: 'text' },
            { name: 'Patient Rep\'s Relationship to Patient',
              page: 2,
              value: '',
              id: 196612,
              type: 'text' },
            { name: 'Patient Name',
              page: 3,
              value: '',
              id: 262144,
              type: 'text' },
            { name: 'Patient DOB',
              page: 3,
              value: '',
              id: 262145,
              type: 'text' },
            { name: 'Current Annual Household Income',
              page: 3,
              value: '',
              id: 262146,
              type: 'text' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262147,
              type: 'radio' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262148,
              type: 'radio' },
            { name: 'Other Specify',
              page: 3,
              value: '',
              id: 262149,
              type: 'text' },
            { name: 'SSN', page: 3, value: '', id: 262150, type: 'text' },
            { name: 'Group98',
              page: 3,
              value: undefined,
              id: 262151,
              type: 'radio' },
            { name: 'Group98',
              page: 3,
              value: undefined,
              id: 262152,
              type: 'radio' },
            { name: 'Yes, date1',
              page: 3,
              value: '',
              id: 262153,
              type: 'text' },
            { name: 'Group99',
              page: 3,
              value: undefined,
              id: 262154,
              type: 'radio' },
            { name: 'Yes, date2',
              page: 3,
              value: '',
              id: 262155,
              type: 'text' },
            { name: 'Group100',
              page: 3,
              value: undefined,
              id: 262156,
              type: 'radio' },
            { name: 'No, state1',
              page: 3,
              value: '',
              id: 262157,
              type: 'text' },
            { name: 'Group101',
              page: 3,
              value: undefined,
              id: 262158,
              type: 'radio' },
            { name: 'Group102',
              page: 3,
              value: undefined,
              id: 262159,
              type: 'radio' },
            { name: 'Group103',
              page: 3,
              value: undefined,
              id: 262160,
              type: 'radio' },
            { name: 'Yes, date3',
              page: 3,
              value: '',
              id: 262161,
              type: 'text' },
            { name: 'Group104',
              page: 3,
              value: undefined,
              id: 262162,
              type: 'radio' },
            { name: 'No, state2',
              page: 3,
              value: '',
              id: 262163,
              type: 'text' },
            { name: 'Group105',
              page: 3,
              value: undefined,
              id: 262164,
              type: 'radio' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262165,
              type: 'radio' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262166,
              type: 'radio' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262167,
              type: 'radio' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262168,
              type: 'radio' },
            { name: 'Group96',
              page: 3,
              value: undefined,
              id: 262169,
              type: 'radio' },
            { name: 'Group99',
              page: 3,
              value: undefined,
              id: 262170,
              type: 'radio' },
            { name: 'Group100',
              page: 3,
              value: undefined,
              id: 262171,
              type: 'radio' },
            { name: 'Group101',
              page: 3,
              value: undefined,
              id: 262172,
              type: 'radio' },
            { name: 'Group102',
              page: 3,
              value: undefined,
              id: 262173,
              type: 'radio' },
            { name: 'Group103',
              page: 3,
              value: "undefined",
              id: 262174,
              type: "radio" },
            { name: "Group104",
              page: 3,
              value: "undefined",
              id: 262175,
              type: "radio" },
            { name: "Group105",
              page: 3,
              value: "undefined",
              id: 262176,
              type: "radio" } ]


          transformCB(null, result);
        },
        function CreatePDF(formValues, createPDFCB){
          // Use the pdf module to create a Gilead pdf based on the fields
          var pdfFormFill = require('pdf-fill-form');
          var fs = require('fs');

          var date = new Date();
          var currentTimeInMilliseconds = Date.now();
          var outFileName = './out/gilead-'+currentTimeInMilliseconds+'.pdf';
          var templateFilePath =  './template/gilead.pdf';

          // Show fields
          var formFields = pdfFormFill.readSync(templateFilePath);
          console.log(formFields);

          // Write fields
          pdfFormFill.writeAsync(templateFilePath,
            formValues,
            {'save': 'imgpdf'}, function(err, result) {
              if (err) {
                createPDFCB(err);
              }

              fs.writeFile(outFileName, result, function(err) {
                if (err) {
                  createPDFCB(err);
                } else {
                  console.log('The file was saved!');

                  createPDFCB(null, outFileName);

                }
              });
            });
        }
    ], function(error, results){
      if(error)
        cb(error);
      else
        cb(null, results);
    });

  }

  Gileadform.remoteMethod('printToPdf', {
    accepts: [{arg: 'id', type: 'number'}],
    returns: {arg: 'url', type: 'string'},
    http: {path: '/:id/print', verb: 'get'},
  });
};
